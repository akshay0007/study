scope::
global
function
no block level scope
es6 le and const keywords

hoisting::
machanism where variable initalization::
variable and function declaration
movied on the top
variable init
function expression
not moved on top

this key word::
rules to deterimine this
call()
apply()
bind()
new

closures and iife::
inner function access outer functin var. method either it go to scope
immediately invoked function expression
module pattern

new operator & constructor funciton::
user define types using new keyword
new key word for construction
objects without class
constructor assign to variable


prototypes and inheritance::
no class based inheritance.
inheritance is through prototype chain
__proto__ of an object
prototype propety of a fuction
Obect.create
Objects links to other object

Function programming::
pure function
function composition
function currying
higer order functions
pass function as args and reture as function
Map,filter,reduce


Asynchronous javascript
event loop
Asynchronous
single threaded
callbacks,Promises and async-await
what the heck is the event loop anyway -phillip roberts
=============================================================================
es6::
var let and const key.

arrow functions::
syntex -parenthessis and curly braces and return keywords
this keyword

templete literals:
multiline strings
embed expressions
back ticks ''

default parameters:
default values to parms when yout define funcitn

object literals::
propety name and values name is same ?omit the value name.
ex.
let name="vishwas"
let person={
name;
}

rest and spread opertor::
rest oprator is usrd to represent and unkonwn number values as an array
specifiing parmerter to a function whose values may vary at runtime

spread oprator is used to spread or expand an iterable like an array


Destructing assignment::
special assignment:
eg.
let person={
name:'vass'
}

const{name}=person//name contain the value vishwas

classes ,modules ,promises,iterators and so on




