Api gateways::
1:security
2:authentication
3:authorization

now coming to divide service to multiple microservice
consolidate all cutting concern to single


customize api gateway for microservices::
 basically adding adapter into microservice,purpose of it consolidate all apis into one and server following data.
1:serving static content
2:caching response.


now more customization on api gateway like some service are called more frequently then for that purpose we need router & load balancer

load balancing 
A/B testing
canary release.

next feature protocols::
like websocket,https.

Api gateway::
Security
static content
cache
router & load balancer
Adapter

self managed::
Apache
Haproxy
Nginx
Spring cloud gatway

Cloud Service::
Aws api
azure api
google cloud end point
Apigee

====================================================================================


Recommandation to design rest end points::

:HTTP has verbs (or methods):
GET, POST, PUT, PATCH and DELETE are the most commo
REST is resource-oriented and a resource is represented by an URI: /newspapers/

Content-Type header too! It must be set to the value application/json


i recommand using plural form in rest end points::
/article/:id/ (singular) or /articles/:id/ (plural)?



Return error details in the response body


Pay attention to status codes

Make use of the status code and only use the response body to provide error details.
HTTP/1.1 400 Bad Request
Content-Type: application/json
{
    "error": "Expected at least two items in list."
}

GET: 200 OK
POST: 201 Created
PUT: 200 OK
PATCH: 200 OK
DELETE: 204 No Content


Pagination allows users to retrieve fractions of a data set. 

GET: /articles/?page=1&page_size=10


use request params instead of using path variables for clear understanding
GET: /articles/?author_id=12


 401 Unauthorized::having no authentication of service
 403 Forbidden::Was the user correctly authenticated, but they donâ€™t have the required permissions to access the resource?

====================================================================================
